<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lanqiao.system.mapper.FGoodsMapper">
    
    <resultMap type="FGoods" id="FGoodsResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="categoryId"    column="category_id"    />
        <result property="price"    column="price"    />
        <result property="unit"    column="unit"    />
        <result property="coding"    column="coding"    />
        <result property="specification"    column="specification"    />
        <result property="image"    column="image"    />
        <result property="description"    column="description"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="num"    column="num"    />
    </resultMap>

    <resultMap type="FPurchaseOrders" id="FPurchaseOrdersResult">
        <result property="orderId"    column="order_id"    />
        <result property="goodsId"    column="goods_id"    />
        <result property="supplier"    column="supplier"    />
        <result property="quantity"    column="quantity"    />
        <result property="unitPrice"    column="unit_price"    />
        <!--        <result property="totalAmount"    column="total_amount"    />-->
        <result property="paymentTerms"    column="payment_terms"    />
        <result property="shippingAddress"    column="shipping_address"    />
        <result property="status"    column="status"    />
        <result property="orderDate"    column="order_date"    />
        <result property="requiredDate"    column="required_date"    />
        <result property="orderComments"    column="order_comments"    />
    </resultMap>

    <!-- 定义 resultMap -->
<!--    <resultMap id="FGoodsResultMap" type="java.util.HashMap">-->
<!--        <result column="id" property="id" jdbcType="BIGINT"/>-->
<!--        <result column="name" property="name" jdbcType="VARCHAR"/>-->
<!--    </resultMap>-->

    <resultMap id="FGoodsCategoryResult" type="FGoods" extends="FGoodsResult">
        <collection property="categoryList" notNullColumn="sub_dept_id" javaType="java.util.List" resultMap="CategoryResult" />
    </resultMap>

    <resultMap type="Category" id="CategoryResult">
        <result property="deptId"    column="sub_dept_id"    />
        <result property="parentId"    column="sub_parent_id"    />
        <result property="ancestors"    column="sub_ancestors"    />
        <result property="deptName"    column="sub_dept_name"    />
        <result property="orderNum"    column="sub_order_num"    />
        <result property="cFlag"    column="sub_c_flag"    />
        <result property="createTime"    column="sub_create_time"    />
        <result property="updateBy"    column="sub_update_by"    />
        <result property="updateTime"    column="sub_update_time"    />
    </resultMap>

    <sql id="selectFGoodsVo">
        select id, name, category_id, price,unit,coding,specification, image, description,num,status, create_time, update_time, create_user, update_user from f_goods
    </sql>

    <select id="selectFGoodsList" parameterType="FGoods" resultMap="FGoodsResult">
        select id, name,category_id, price,unit,coding,specification, image, num,description,num,status, g.create_time, g.update_time, create_user, update_user from f_goods g
        left join category c on c.dept_id = g.category_id
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="categoryId != null and categoryId != 0">
                AND (c.dept_id = #{categoryId} OR c.dept_id IN ( SELECT t.dept_id FROM category t WHERE find_in_set(#{categoryId}, ancestors) ))
            </if>
        </where>
    </select>

<!--    根据部门大分类查询-->
    <select id="selectFGoodsByParentId" parameterType="FGoods" resultMap="FGoodsResult">
        SELECT g.id,g.name, g.category_id,g.price,g.unit,g.image,g.description, g.status,g.coding,g.create_time,g.update_time,g.num, g.specification, g.profit
        FROM f_goods g
        INNER JOIN  category c ON g.category_id = c.dept_id
        <where>
            g.category_id IN (SELECT dept_id FROM category WHERE parent_id =#{deptId} )
        </where>
    </select>

    <!--    查询超盒算-->
    <select id="selectFGoodsByFavorable" parameterType="FGoods" resultMap="FGoodsResult">
        SELECT g.id, g.name, g.category_id, g.price, g.unit, g.image, g.description, g.status, g.coding, g.create_time, g.update_time, g.num, g.specification, g.profit
        FROM f_goods g
                 INNER JOIN f_purchase_orders p ON g.id = p.goods_id
        WHERE (g.price - p.unit_price) BETWEEN 1 AND 2
        ORDER BY (g.price - p.unit_price)
    </select>
<!--&lt;!&ndash;        查询名称->-->
        <select id="selectMapGoodsName" parameterType="string"  resultMap="FGoodsResult" >
            select  id, name,category_id, price,unit,coding,specification, image, num,description,num,status, create_time, update_time, create_user, update_user
            from f_goods
            where name like concat('%', #{goodsName}, '%')
        </select>

<!--        查询生鲜-->
    <select id="selectFGoodsByFreshList" parameterType="FGoods" resultMap="FGoodsResult">
        SELECT g.id, g.name, g.category_id, g.price, g.unit, g.image, g.description, g.status, g.coding, g.create_time, g.update_time, g.num, g.specification, g.profit
        FROM f_goods g
        WHERE   g.category_id in ('1001','1003','1005','1007','1019','1020','1022','1023','1024','1025','1026')
    </select>

<!--    查询日用品-->
    <select id="selectFGoodsByDailyList" parameterType="FGoods" resultMap="FGoodsResult">
        SELECT id, name, category_id, price, unit, image, description, status, coding, create_time, update_time, num, specification, profit
        FROM f_goods
        WHERE   category_id in ('1062','1064','1065')
    </select>

<!--    查询商品价格小于10元的数据-->
     <select id="selectFGoodsLessTen" parameterType="FGoods" resultMap="FGoodsResult">
         SELECT id, name,category_id, price,unit,coding,specification, image, num,description,num,status, create_time, update_time, create_user, update_user
         FROM f_goods
        <where>
            price = 10
        </where>
    </select>

    <select id="selectFGoodsById" parameterType="Long" resultMap="FGoodsCategoryResult">
        select a.id, a.name, a.category_id, a.price,a.unit,a.coding,a.specification,a.image, a.description, a.num,a.status,a.create_time, a.update_time, a.create_user, a.update_user,
        b.dept_id as sub_dept_id, b.parent_id as sub_parent_id, b.ancestors as sub_ancestors, b.dept_name as sub_dept_name, b.order_num as sub_order_num, b.c_flag as sub_c_flag, b.create_time as sub_create_time, b.update_by as sub_update_by, b.update_time as sub_update_time
        from f_goods a
        left join category b on b.dept_id = a.id
        where a.id = #{id}
    </select>

    <select id="selectRecommended" parameterType="FGoods" resultMap="FGoodsResult">
        SELECT g.id, g.name, g.category_id, g.price, g.unit, g.image, g.description, g.status, g.coding, g.create_time, g.update_time, g.num, g.specification, g.profit
        FROM f_goods g
                 INNER JOIN (
            SELECT goodsId, COUNT(*) as count
            FROM f_appraise
            WHERE rating IN ('5', '4')
            GROUP BY goodsId
            HAVING count > 0
        ) a ON g.id = a.goodsId
        ORDER BY a.count DESC
    </select>

        
    <insert id="insertFGoods" parameterType="FGoods" useGeneratedKeys="true" keyProperty="id">
        insert into f_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="categoryId != null">category_id,</if>
            <if test="price != null">price,</if>
            <if test="unit != null">unit,</if>
            <if test="coding != null">coding,</if>
            <if test="specification != null">specification,</if>
            <if test="image != null and image != ''">image,</if>
            <if test="description != null and description != ''">description,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="num != null">num,</if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="categoryId != null">#{categoryId},</if>
            <if test="price != null">#{price},</if>
            <if test="unit != null">#{unit},</if>
            <if test="coding != null">#{coding},</if>
            <if test="specification != null">#{specification},</if>
            <if test="image != null and image != ''">#{image},</if>
            <if test="description != null and description != ''">#{description},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="num != null">#{num},</if>
        </trim>
    </insert>

    <update id="updateFGoods" parameterType="FGoods">
        update f_goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="coding != null">coding = #{coding},</if>
            <if test="specification != null">specification = #{specification},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="description != null and description != ''">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="num != null">num = #{num},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFGoodsById" parameterType="Long">
        delete from f_goods where id = #{id}
    </delete>

    <delete id="deleteFGoodsByIds" parameterType="String">
        delete from f_goods where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteCategoryByDeptIds" parameterType="String">
        delete from category where dept_id in 
        <foreach item="deptId" collection="array" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </delete>

    <delete id="deleteCategoryByDeptId" parameterType="Long">
        delete from category where dept_id = #{deptId}
    </delete>

    <insert id="batchCategory">
        insert into category( dept_id, parent_id, ancestors, dept_name, order_num, c_flag, create_time, update_by, update_time) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.deptId}, #{item.parentId}, #{item.ancestors}, #{item.deptName}, #{item.orderNum}, #{item.cFlag}, #{item.createTime}, #{item.updateBy}, #{item.updateTime})
        </foreach>
    </insert>
    <!--    根据id查询商品-->
    <select id="selectListName" parameterType="Long" resultMap="FGoodsResult">
        <include refid="selectFGoodsVo"/>
        where id in
        <foreach item="GoodsId" collection="list" open="(" separator="," close=")">
            #{GoodsId}
        </foreach>
    </select>
<!--    根据名称查询-->
    <select id="selectGoodsName"  parameterType="String"  resultMap="FGoodsResult">
        SELECT * FROM f_goods WHERE name LIKE CONCAT('%', #{goodsName}, '%');
    </select>


    <!--   根据商品分类查询-->
    <select id="selectGoodsType" resultType="cn.lanqiao.system.domain.FGoods">
<!--        <include refid="selectFGoodsVo"/>-->
        select fg.*
        from f_goods fg
        join category c on fg.category_id = c.dept_id
        where c.dept_name = #{goodsType}
    </select>
<!--&lt;!&ndash;   查询商品名称&ndash;&gt;-->


    <select id="selectGoodsList" resultType="cn.lanqiao.system.domain.FGoods">
        <include refid="selectFGoodsVo"/>
        WHERE  coding = #{coding}
    </select>
<!--根据编号获取商品信息-->
    <select id="selectProfit" resultType="cn.lanqiao.system.domain.FGoods">
        <include refid="selectFGoodsVo"/>
        WHERE  coding = #{coding}
    </select>

    <!--    修改库存与状态-->
    <update id="UpdateGoodsNum" parameterType="FGoods">
        update f_goods
        <set>
            <if test="num != null">num = #{num},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        where coding = #{coding}
    </update>


</mapper>